/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SYMBOLS 1
#define NAV 2
#define NUMPAD 3
#define CYBOARD 4
#define LOCK 5

/ {

// key-positions for combos
// 0  1  2  3  4  5  -  |  -  6  7  8  9  10 11
// 12 13 14 15 16 17 -  |  -  18 19 20 21 22 23
// 24 25 26 27 28 29 -  |  -  30 31 32 33 34 35
// -  -  -  -  36 37 38 |  39 40 41

        combos {
                compatible = "zmk,combos";
                combo_toggle_lock_left {
                          timeout-ms = <50>;
                          key-positions = <0 5 38>;
                          bindings = <&tog LOCK>;
                };
                combo_toggle_lock_right {
                          timeout-ms = <50>;
                          key-positions = <6 11 39>;
                          bindings = <&tog LOCK>;
                };
                combo_cyboard {
                          timeout-ms = <50>;
                          key-positions = <1 2 3 4>;
                          bindings = <&tog CYBOARD>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R    &kp T                              &kp Y      &kp U   &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F    &kp G                              &kp H      &kp J   &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V    &kp B                              &kp N      &kp M   &kp COMMA &kp DOT &kp FSLH &kp ESC
                               &kp LALT &kp RET &sl SYMBOLS    &sl SYMBOLS &kp SPACE  &sl NUMPAD
                        >;
                };

                symbols_layer {
                        bindings = <
   &to DEFAULT &none    &kp BSLH &kp FSLH &kp DQT  &none                                &kp EQUAL &kp AMPS &kp LPAR &kp RPAR &kp MINUS &kp DEL
   &none       &kp EXCL &kp AT   &kp HASH &none &kp CARET                               &none  &kp SQT  &kp LBKT &kp RBKT &none     &none
   &none       &none &none &kp LT   &kp GT   &kp GRAVE                                  &none     &kp PIPE &kp LBRC &kp RBRC &none     &none
                                              &trans    &trans &none    &none &trans    &to DEFAULT
                        >;
                };

                numpad_layer {
                        bindings = <
   &none &none &none &none &kp DLLR &kp PRCNT                               &kp EQUAL &kp N7 &kp N8 &kp N9 &kp MINUS &kp N0
   &none &none &none &none &none    &none                                   &kp STAR  &kp N4 &kp N5 &kp N6 &kp FSLH  &none
   &none &none &none &none &none    &none                                   &kp PLUS  &kp N1 &kp N2 &kp N3 &kp DOT   &kp COLON
                                    &trans    &trans &none    &none &none &none
                        >;
                };

                cyboard_layer {
                        bindings = <
   &to DEFAULT &none        &none        &reset       &none        &bootloader                                                         &bootloader &none &reset &none &none &to DEFAULT
   &none       &bt BT_CLR   &none        &none        &none        &none                                                               &none       &none &none  &none &none &none
   &none       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                                                        &none       &none &none  &none &none &none
                                                                   &none        &out OUT_USB &out OUT_BLE    &out OUT_BLE &out OUT_USB &none
                        >;
                };

                lock_layer {
                        bindings = <
   &none &none &none &none &none &none                            &none &none &none &none &none &none
   &none &none &none &none &none &none                            &none &none &none &none &none &none
   &none &none &none &none &none &none                            &none &none &none &none &none &none
                                 &none &none &none    &none &none &none
                        >;
                };
        };
};
